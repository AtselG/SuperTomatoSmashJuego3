<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerVerification.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAASFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAFtlJ
        REFUeNrt3V1vHNd9x/HvmdknPkqiSEuRHYtRGLtNijxBaAIBCXpho0gQIBcKUMDwCyhgwFe5D3KfqwB+
        AQXSAAXqiz6gQZG0KepAjYGkaVo7zYMqyzJNm6JMUeQu92Fmzr8Xu5LcAN5zVp31cnd/H4OmAI3m4cyc
        387u/PccEBERERERERERERERERERERGRqefUBDIJlz//tbFv42f//vdq6ICKmkAmaBF4FlgGrMT1XgNu
        qnkVAHKyrQPfBZ4scZ0GPK8AiJOoCWTG6G2tAkBEFAAiogAQEQWAiCgAREQBICKqA5DyPPPcM9HLHvxa
        7XUS6A5AJqLo6nH9SaA7ABmHF4AvAcUHLXD2M20zz3LeStctUATsnKNzcMDRztvlFgyLAkDG4kvAn4UW
        cglUV4vgypxz9Noteu0dtawCQKZAEb2kjbKc3jaUTZ8BiCgAREQBICIKABFRAIiIAkBEZtXcPgb8MAal
        HIUGsBzCuf7PCP+izM2PUuL8YfjR93+kAChJCpybYDvkwC6jPDefJWYUvR5mNrSDO8Dn+TFwJ3LNzTHs
        7SL9MQwnpQW8V/ZK5z0AzgEvA08A/kPedgJsA1eBuSxxK3o9br/+OkW3G7P4D4EXI1d9Zwy7+yz9AUwn
        oTK4Tl8cx4rnWWXQ+Z+Y8D7MJTOj6HbJO52YW/wmcGuCu7tMuaMXj2osdx8qBf7wX/lPyrYn736nj3t/
        /2Ch6zv5JPZ20l9DGsv29RRAZI4pAEQUACKiABARBYCIKABEZMaV+hjwpJXXBhn5iMvHGa0QNceNp+3K
        Ki8euRTWhR9vOsBhpRbtjq1kt3/ex1OtGf8S7O++toBLLfpaiTn/46oDuAJc4mQ/57akauvpgl+Kegxd
        d7ASebaOPHTDaWHGUtFOrvrc3aHc+vVrlD899ubgvAZlR8kl8y4YAHkvpb+clXz4pV9/BSvJl2iUOySZ
        5ZDv9H+Hl3WXXGrPlX3+xxUALwDPcdI5WHgsJ6kGOqsBGylsRQbA9QL2iuA17TN3tnmrVnZ5qQHPjyEA
        rgDfi+mp2WFK714aWNLhiwIbz+tq+ddfw8FWtdRrz5rQ/i/wzZhW5QpxATzS+ddnALPHTem6ZQLnSAEg
        MscUACIKABFRAIiIAkBEFAAiMuM0IMgMK6+6sHMijsfnOWtbWzzzJ5s6uSXRHYAEuXQcg9G8f51xj67X
        trbc2tZWcHfn/HSNdLLGdQfwEvADhpZiOivyw/Vu6+a3MH926BEZnP34GT725bgh2e60oBUxzqRLHG6p
        Ci44QT3dvQMO//atuKNvGnQCde5mJJUayxuXcGmJFWZAdpi+kB0lX8GVE/B3X1vw9bP5pYXH4r460T2+
        xfHBYXCkL1dJOPPxTZJK0j/JQ6S12pXGmTPf83nEPjxeucKiG94VHFgHOv8BFrxWHPnuAd1fvUW5kvcq
        vc1vO7d6B6zsUvCJBsC10E5k3dsc7r16Ia2k3wSGBoAvPJUlOP/puADo7kOvFTnUnIX7iEsc+W6H5msj
        DN4b2rYZlYUGpy4+QbWRlDrgW95MYstGo1kef33mvbv02u/gkmTI4RvVRoPF9SepNBaCAWCwidlm1A4s
        un7pdigAmpAdD0pxh55LR++4Q+ug9MGbWz5/8+XVx76wU21sMAmlBsAo3z7bulAhrVSitu9IwMAiv9ph
        nv69R1mZOpib3iUlhrRzuPvfiZv0cJNlcw5cMvQEOPfw2M2X/J0xe99P8Lw+DIShkpLP/0Baq1RaBz+f
        1ECn+gxAZJ4pAEQUACKiABARBYCIKABEZMadhFLg6BDqP9ePeBTj3vdTBlf+4x8ze/gUyjlm6lmgWf9n
        WLs9ON5BwVRZh+8G7RmsQhrh+nBjKy6c+AvwpAMgpz9FNgQGcDRvS8f7nbMxK+0dQN4usf8nDmvn1JJa
        aReqOSN1VXy3R/lPgBOSahJRjAS+cFHHZN7hs7gWTSo1KguNQZ3DB0vrdSxP+usNDctoBWZZ3OE3C6hF
        FAK1wOcQLENwDnx+TLnTjt+fHn4yBQAPm2Eyti5UAFLgXCiIfOHzxTMLV13qogbQLDz4El9QDVi1ZT7i
        Hyux4R2ZZdzyO2SWlXcinOPMxz7B4tkNbNhdhQOfOY7fruIjqvxcEv+dgPpam3SxF7i8DMsTOntLWJ4E
        BxDNOru0D/+bqLSqurjXVgPfJjbU/8YXnRdL7gY5sAsUkyoEmvQdQAEE6yuTJKF9rxOdvmWnmgFUF6g1
        aqUGAEDR7ZL73qAyrrzrKqlaMABGaSzzEBrq+8Gq02q/vDnwCuwz9/AOIBAARa8g70Z+K7EzQvrHN3sT
        3C1mzMQCYJTE27pQwY3xjVhkBJS8xv5/Dldy5x/hkGy8q4/afux78VHaaDzt6R7l2j3p9BRAZI4pAEQU
        ACKiABARBYCIKABEZMZNxajANsbnVRa5fT+GvTAePg4sZUcHvPWr2yxYXTdYJmbdbuQDixuR5/7oTaFt
        F4YVJZ+B+xXDUUPHmT/z+Ncxn3H5fNzqRxkhSwEwxFplbSzrTYBTHtLg7ODGMsuslzyVdY+E/cppehET
        xPt6Qr4cd7qe+Ngi6x9NhxcCAVkHbhx5et1wH/CZI29H3jCuJrARDgBXQDUlaorwhl9kLb9Qauf3Pdh/
        A4pe+Phd2rhkPoudcvwa5U/PPr8BcLFxcSzrrRl8qgf12BeWrNztd12FTu1xehE1+72zNY4vLUat9zNX
        qmw9nQ6tcXcOmkfG/t0ezSMbXjvjoHcvjQ+AcylspcFXdgcsPB1enZmxtnSai2unSw2AzgH84i+ge4+Y
        u4DYgVYNeH5aAmCuPwM4CQPIz/sg9hNt+/E0/lSdUn0IKDLHFAAiCgARUQCIiAJARBQAIjLjJlYH8I2n
        Lqv1ZaZd/vzXopedVNWg7gBkbhlMdJypk2DSlYBngW8B6wwpHDXwa55LZ0suxU0NqmP4msGtj9S5e6oy
        tBjf0R8Q8V4CRWBIPPOwsVnh8heqUdtPTie8cS+wkINOEwqLqVxxFL27HN97J1zf76D7U0hep9Qhxw4r
        sBc5JOPq5y9S/+iZ4JchXAGbz/R/D13OQbMLd5px289u8EJ2i6+QDH2BdfRHGf428N68BsAScBUIFnmn
        BhtF+Tswjq8Z3T1VYfuxGknEWP8xL0DeQ+NCytbTadT237gH73XCr25Zrx8AMfvoiza99k5cA9wcT7vu
        R6504/wGy+tngt8xqFXgqT+AemgEcQf7LTjcj9t+vh1dNrwDfGeeAwBGGBd9aqbOMCMxw5W1w4Nv1gXH
        r/+9i9ZFJM9od8CRSyeTrYd1yWDM5Yi5QcxDcLBj118OX/quTnx0UX0GIDLHFAAiCgARUQCIiAJARBQA
        IjLjpmJIsHEa6XFV7Nidg8E2y34M6EY9KDd8ERc7Qahz01cyF3wOCjh7cGjBUzXC4T8o/4g7/x43ubLh
        uQ4AA9pJgsWc3QokjchrbzmhvuRKCwDvgSo0e3HLd9pG1g73j96xJ+90yTt+aAd3DiwrqLnyZkceX8cH
        a+fk99pYYI54lzo6tRq+Ej7/RQ61uDosugtQLEeFRsUynrAu4IJ34y3GUDA0twHgBp3/J6tnaCeBtvdQ
        3YSFP45b8WPrjqeWHWbl7Wszh3+4Hrd8cSOneM8HX7TzTpedn79G1ukOL0UGVpMVtha3puLcvvPTXXZe
        /Z9g/0vSBs2znyNN68PPlcHa07D1bNz2t78Adz8ZvmmyNudaP+Zl6wYLgirAy8CLCoASGY52ktBKwtFe
        qwGn4jqrW4baYnmViw6gFX8H4NpAK/CewUHe8WSdLkVneN2wmUF1kVpjCu4AANoFedaOCADopkaSOoad
        Le+haMffAaQLkFg4ADykRJTBD6yPo6nm/jOA/9PJQh07tkeP9h4weudG+gwgZsILd79k1v3/GufEntDA
        fU1kOz3SRyAWs3+lrvGR6CmAyBxTAIgoAEREASAiCgARUQCIyIwr9THgqCP9WuSIKA+mm7cyn0dZf3p6
        c/1azAAPuMi4dGn8slHrG3GdFvV4q/+X3oG34TUDhuEH7TVJsWffBv/FXFfRtcAOXGLl7ij9kYbMx/wb
        5w92/w7nKmxdiOu213fC3WtcdQBXgEsMH0TJasb6qmcpYnZsNtKcjdVuqTu54hI+Vze6STK8Zsbgbstz
        67W4QQl3l6BZL7dBW11otuKWXdqrU2tWA4ULjlqv4ON2CpLFYIdaZpn1MYzJGKvr4CgyAJfT5cERDr+y
        LEnJOrfJk0qgkxrN24u8+5+no7bfWYRg1bRBWoWNPwTXDQdAt3V06d7tynORzXWNyOnJxxUALwDBnU2A
        J3OoB4LVzLGx2mXr3F7pO/qpiGVSBz/Z6/HzXx5HrbP8vRzNYuMiS5W14Ktg3eCT/gL1yAo3sskcjwP2
        0vgAWK+us14NF871rMf1o9/Rs1CJpbH32wu0duMCYPHLUNsiOIZgdQG2/jRcYehSx1uvHl25+W9RA40a
        8HxsAOgzgBEuQpljUzMi7WiXqgJAZI4pAEQUACKiABARBYCIKABERAEgIgqAMdHzdZFSjVSxUGol4NaI
        lWL1xLO1fkA9KYJ7Xa+WP5FqUq+y/NktkkZtaLO5xPHpt+7w59yIWu+791Y5atfLSzeDlYUu508dRi2+
        lB5Tc8XQSsD+lN8pR3dO44uTfSNowIqPv752UziMmKG44io8Xn8cHyjZc8AxnoODX4Y37qD7U0heD3fF
        xEGz0f89fJ2OvJ1dA16KbLJrEwmAjRFrxevOs77Uiuvc5sotxjLDVSo0Lp4nXV4Y3lmShMeBlRvbUav+
        XXuFvc5yaUPpG7BRa/KJU53I5TMgPIJoN6vwmlulOwXvBOsGjcjr6yDycBISTldOR/RpB/l73O7sxK34
        ZvzL8GH8RX3Dpe77ZbdrqQFgj7C84Ur+lt9oe2DW/xk2LrThMW8UkQd4fyr5siLLcHiI3v79yza8n9P1
        BszGsk4bYduR7ZWM5a3tg1iL+ZbfyCsVkfmjABBRAIiIAkBEFAAiogAQkRk3u3MDWrkPjQwbPAuyD3vT
        xG1VZrytxvLMdiYDIKlXcZVK8FJIFhs456IumaRSIV1uRG2/dgD1do5z5dUBVJMJjsg5Zar0C4diBpvN
        XFxgJCTUXNzsyLnlwerCgQLYhajpwe8oACItf3aLxsXz/QKfIZxzJAu18BXgjdqFs6x99YtxO3DtN5x/
        YyeixjNe6jwS54kcPhJYxgE9B7+t9n8PDwpjpbLCVroVtf23u29zkB8ERyUedP6rwDbht+OtcbTVbN4B
        NGr98t7gvbhF3y+6SkpajWkuo1aHopqVOzmAxF/UFr6w3e/9Dl5TI9wBJPEfreWDzr/NhMzmZwB2/z17
        ye8GbYSyUXP6quPJvkROymcFCZRb3jvyxkVkPikARBQAIqIAEBEFgIgoAERkxs1uKbBEiR6RydlMPtU8
        QY8DFQDy4UqdZ22pRebTYOfuZhWOOvXZOn5gzfdnPS8z3HanKFEUAHOskno2N/aDyzln7B0uc9TZmK3j
        N9jMyl/vmx52mI46MH0GIDLHFAAiCgARUQCIiAJARBQAIqIAEBEFgIgoAERkdsxkJWDr12/S3d4bPvOr
        9ccOXP7sFkm9OnyFzpHt3qX16zejtp/dPqC0ucFlfBd/6nli7YBqUgz9PoBzcNhusHtvRQEwDbLdu2Tv
        3h26jGGkywss/dEmNGrDx/tzkDeP6VyPnB/eaTzAaXD/uxD16vDx+O6fSgXAtIjogM4YzAkQ11MdrtRh
        vuVkiPo2pLOxTPZyEugzAJE5pgAQUQCIiAJARBQAIqIAEJEZpyHB7htSuOPu/509+N8jr0tEAXAyejxm
        hj/uRPRnhxUF6XIjas2+m2F5oatLFAAnuP/j2z3u/vgXD1/hP4CZUX98g7WvfjFq1Yev/oruzV0VDokC
        4EQzw7e6hG7rzdv77gBCndpIKnpnJQqA6eAIduoHNwiRnwHYXE81IdNETwFEFAAiogAQEQWAiCgAREQB
        ICKzalyPAdPYBR2GcxGPzczp4ZpEscH1El4uvlDL4UjKH+dt4o/hx7UDrwx+D6uHNYPlu63FZ9PEL4ZW
        WK/mrDS6urolaLXRDY7zZ0A1KUidj+r8h3T5je1Hbb9HcQ24wfA7bAfcAVqzGAAvDX6GN1ReefKNvbOv
        AE8OPVnm2FhtstLY09UtQedOHbKx2gyP9RfJAbvW4p+K6OvvpQT3/WloK30GIDLHSr0D+Oatn0Uv+50n
        L6v1ZaZd38lP/D7qDkBkjikARBQAIqIAEBEFgIgoAEREASAis0pDgsVwjuz2AQf/+suoxbPbB1MxNHhe
        JGzvnybzabDKvZvN3qUSe/wJ8G7vCDhWAMxnAEBx1KY4jLwAIqYnPwkKS9hvLcV1bmfTcEhjOf4EOLLe
        TF7aCoARQmAWJ/yI/jbmzJ7W8PG7mYu+h/QZgMgcUwCIKABERAEgIgoAEVEAiMiMOwmPARVCEzAlpQrj
        bYMH/3cMG3LWMXJbTU3TTjoAcmB78OehozOasdTNK2djVlpNC5I5fradFwmFJcErtJenTEt5T+KMalpE
        LZsm4XPvAI/Rokfb/NBaAIejZ/6Y/iCeMZoKgDi7wNWI/cgP242rv9o+/92YlW5u7LO23CptUMhps71/
        mv3WEqGB1A1Hlqcn/njMHKeWjtnciBuVt5oWUee+bTn/WNxkv7CISd/th8CLkbt8hykx6QAogJ3QQs4Z
        WZFGN2rh5/vmNvMp3awyUxV+aWLUK+WOsde/A8g4wsfcBzUd3Jq1a2ViAfAIA4jO+1vWaGqo0doq8j3+
        g0WmYbDPWPoATmSOKQBEFAAiogAQEQWAiCgARGTGTdOIQNFh5QYLW8Rz8Ogn5eYYx1P1eR6NB4gq2DH6
        c8mPcqGEBm9yQDra89KTXzE14wFwA4iacvmdvHblTmt5M3TNpMApDxGVo9SrOSuNbqkH5M1xr7VYeuFS
        N6vAFARL4oxTS8fB0l0zWF3oRK/3N+2cO1m4uKftOTbjh/RLd13gUnlFATBZ1wY/H3wwBjeruO3Wqe/R
        YjPYqQ0+1YNaoK+YOTZWm6w09ko9oKxIubm3Rjcv/zRMQzFQNS3Y3NgvvcLvn+/2+Mm9Xswr/B3gxVms
        8Is1U58B3KzCzepod+rzfQM+m3RO403FHUBs2fA3nrpMRWdfHsEslfeOQk8BROaYAkBEASAiCgARUQCI
        iAJARBQAIjKrZnV24JeAHzB8pGHzsH6rwrccDB1t2DC2izq/298YWmFn9CvwzhWw4sM7WXhHVsxkiXmU
        o8L4y902PdejzNrF21nxEv3S3WGN6+iXAE/NAJ4KgHjBsmGAnuPCnZRvEggAAHwFa1WjNp5lsFHEVaTN
        65eBHNDzxs+Oehxar+wpuF9JHH81zx17LgPgr38bP9DoN566jBvx+GM7q3Phb6NJPwUSHKlzZX93IYX5
        re4bhT4DEFEAiIgCQEQUACKiABARBYCIzKpZrQMYRekh+Ajzyc8dN95WUvMrAKLkwPbgz76slXYtXz8y
        vzins5NH99Fjywr6U8SX/cC+qfZVAMTYBa6W3Q7/kl3/rjf/dV1e4fbvUVylH8Jl3onNdXmvAiBeAeyU
        ucJG0uCetZu6C42SA9vu4V2YKAA+HKOUDcfautBvTqdC4FEkoLLdiTa+iCgAREQBICIKABFRAIiIAkBE
        FAASaX4H+huNStF1AmbS/bnkCzXFB3L0K/ZaaorJngQpyf1CIBmdCoEmQ28BRERERERERERERERERERE
        REREREREREREREREREREREREREREREREJuN/AegrLx7HwPE+AAAAAElFTkSuQmCC
</value>
  </data>
</root>